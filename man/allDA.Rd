% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allDA.R
\name{allDA}
\alias{allDA}
\title{Run many differential abundance/expression methods}
\usage{
allDA(data, predictor, paired = NULL, covars = NULL, tests = c("bay",
  "ds2", "ds2x", "per", "adx", "znb", "zpo", "msf", "zig", "erq", "erq2",
  "neb", "qpo", "poi", "sam", "lrm", "llm", "llm2", "lma", "lmc", "ere",
  "ere2", "pea", "spe", "wil", "kru", "qua", "fri", "ttt", "ltt", "ltt2",
  "tta", "ttc", "aov", "lao", "lao2", "aoa", "aoc", "vli", "lim", "lli",
  "lli2", "lia", "lic"), relative = TRUE, cores = (detectCores() - 1),
  p.adj = "fdr", args = list(), out.all = NULL, alpha = 0.1,
  core.check = TRUE, verbose = TRUE)
}
\arguments{
\item{data}{Either a data.frame with counts/abundances, OR a \code{phyloseq} object. If a data.frame is provided rows should be taxa/genes/proteins and columns samples, and there should be rownames}

\item{predictor}{The predictor of interest. Either a Factor or Numeric, OR if \code{data} is a \code{phyloseq} object the name of the variable in \code{sample_data(data)} in quotation. If the \code{predictor} is numeric it will be treated as such in the analyses}

\item{paired}{For paired/blocked experimental designs. Either a Factor with Subject/Block ID for running paired/blocked analysis, OR if \code{data} is a \code{phyloseq} object the name of the variable in \code{sample_data(data)} in quotation.}

\item{covars}{Either a named list with covariates, OR if \code{data} is a \code{phyloseq} object a character vector with names of the variables in \code{sample_data(data)}}

\item{tests}{Character. Which tests to include. Default all}

\item{relative}{Logical. TRUE (default) for compositional data. FALSE for absoloute abundances or pre-normalized data.}

\item{cores}{Integer. Number of cores to use for parallel computing. Default one less than available}

\item{p.adj}{Character. Method for p-value adjustment. See \code{p.adjust} for details. Default "fdr"}

\item{args}{List. A list with lists of arguments passed to the different methods. See details for more.}

\item{out.all}{If TRUE models will output results and p-values from \code{anova}/\code{drop1}. If FALSE will output results for 2. level of the \code{predictor}. If NULL (default) set as TRUE for multi-class \code{predictor} and FALSE otherwise}

\item{alpha}{q-value threshold for calling significance. Default 0.1}

\item{core.check}{If TRUE (default) will make an interactive check that the amount of cores specified are desired. Only if \code{cores>20}. This is to ensure that the function doesn't automatically overloads a server with workers.}

\item{verbose}{If TRUE will print informative messages}
}
\value{
A list of results:
\itemize{
 \item raw - A data.frame with raw p-values from all methods
 \item adj - A data.frame with adjusted p-values from all methods (detection/no-detection from sam)
 \item est - A data.frame with estimates/fold.changes from all relevant methods
 \item details - A dataframe with details from the run
 \item results - A complete list of output from all the methods. Example: Get wilcoxon results from 2. run as such: \code{$results[[2]]["wil"]}
}
}
\description{
Run many differential abundance and expression tests at a time, to easily compare their results
}
\details{
mva is excluded by default, as it is slow.
}
\examples{
# Creating random count_table and predictor
set.seed(5)
mat <- matrix(rnbinom(500, size = 0.1, mu = 500), nrow = 50, ncol = 10)
pred <- c(rep("Control", 5), rep("Treatment", 5))

# Running allDA to compare methods
# This example uses 1 core (cores = 1). 
# Remove the cores argument to get it as high (and thereby fast) as possible.
res <- allDA(data = mat, predictor = pred, cores = 1)

# View adjusted p-values from all methods
print(res$adj)

# View estimates from all methods
print(res$est)

\donttest{
# Include a paired variable for dependent/blocked samples
subject <- rep(1:5, 2)
res <- allDA(data = mat, predictor = pred, paired = subject)

# Include covariates
covar1 <- rnorm(10)
covar2 <- rep(c("A","B"), 5)
res <- allDA(data = mat, predictor = pred, 
             covars = list(FirstCovar = covar1, CallItWhatYouWant = covar2))

# Data is absolute abundance
res <- allDA(data = mat, predictor = pred, relative = FALSE)
}
}
