% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DA.lli.R
\name{DA.lli}
\alias{DA.lli}
\title{LIMMA}
\usage{
DA.lli(
  data,
  predictor,
  paired = NULL,
  covars = NULL,
  relative = TRUE,
  out.all = NULL,
  p.adj = "fdr",
  delta = 1,
  coeff = 2,
  allResults = FALSE,
  ...
)
}
\arguments{
\item{data}{Either a matrix with counts/abundances, OR a \code{phyloseq} object. If a matrix/data.frame is provided rows should be taxa/genes/proteins and columns samples}

\item{predictor}{The predictor of interest. Either a Factor or Numeric, OR if \code{data} is a \code{phyloseq} object the name of the variable in \code{sample_data(data)} in quotation}

\item{paired}{For paired/blocked experimental designs. Either a Factor with Subject/Block ID for running paired/blocked analysis, OR if \code{data} is a \code{phyloseq} object the name of the variable in \code{sample_data(data)} in quotation}

\item{covars}{Either a named list with covariables, OR if \code{data} is a \code{phyloseq} object a character vector with names of the variables in \code{sample_data(data)}}

\item{relative}{Logical. Should \code{data} be normalized to relative abundances. Default TRUE}

\item{out.all}{If TRUE will output results from F-tests, if FALSE t-statistic results from 2. level of the \code{predictor}. If NULL (default) set as TRUE for multi-class \code{predictor} and FALSE otherwise}

\item{p.adj}{Character. P-value adjustment. Default "fdr". See \code{p.adjust} for details}

\item{delta}{Numeric. Pseudocount for log transformation. Default 1}

\item{coeff}{Integer. The p-value and log2FoldChange will be associated with this coefficient. Default 2, i.e. the 2. level of the \code{predictor}.}

\item{allResults}{If TRUE will return raw results from the \code{eBayes} function}

\item{...}{Additional arguments for the \code{eBayes} and \code{lmFit} functions}
}
\value{
A data.frame with with results.
}
\description{
Limma with log transformation for counts before normalization.
}
\examples{
# Creating random count_table and predictor
set.seed(4)
mat <- matrix(rnbinom(1000, size = 0.1, mu = 500), nrow = 100, ncol = 10)
rownames(mat) <- 1:100
pred <- c(rep("Control", 5), rep("Treatment", 5))

# Running limma
res <- DA.lli(data = mat, predictor = pred)
}
